$tblue: #2c57a8;
$tgrey: #dcdcdc;
$tgrey2: #6b6b6b;
$tred: #bb1c22;
$tturq: #4ebcd8;

.landingimg {
    background: url('http://www.studandfound.com/assets/langindpage2-6a592ea9220278929d36e563371eb098.png');
    background-size: cover;
    background-position: center;
    margin:50px 15px;
}

* {
    font-family: 'Open Sans Condensed', sans-serif;
}

.gill {
    font-family: 'Lato', sans-serif;
}

.arrow {
    width:22px;
    margin:75px 30%;
}

.howto {
    height:80px;
    margin:20px 30%;
}

.btn, .btn-large {
    background-color:$tred;
}

h1{
    margin: 25px 50px 5px;
    padding-bottom:10px;
    border-bottom:lightgrey 2px solid;
}

body{
    padding-top: 60px;
}


.footer{
    margin-top: 50px;
    background-color:#ddd;
    padding: 20px;
    a {
        color: grey;
        padding: 20px;
    }
}

form {
    margin-bottom: 0px;
}


/* required for jquery masonry*/

.box {
    margin: 15px;
    padding: 5px;
    font-size: 11px;
    line-height: 1.4em;
    float: left;

/*    -webkit-border-radius: 5px;
    -moz-border-radius: 5px;
    border-radius: 5px;
    box-shadow: 1px 1px 10px #444;*/
}

.box-small {
    width: 190px;
    height: 230px;
}

.box-medium {
    width: 190px;
    height: 240px;
}

.box-large {
    width: 400px;
    height: 400px;
}

.bbt {
    background-color: $tturq;
}

.bbg {

    background-color: $tgrey;
    color: $tblue;
}

.box img {
    width: 100%;
/*    -webkit-border-radius: 5px;
    -moz-border-radius: 5px;
    border-radius: 5px;*/
}

.description {
    font-size: 1.3em;
    padding: 5px 0;
    text-align: center;
    color: $tblue;
/*    -webkit-border-radius: 5px;
    -moz-border-radius: 5px;
    border-radius: 5px;*/
}

.container {
    margin: auto;
}

.inner-container {
    width:auto;
    margin-left:auto;
    margin-right:auto;
}

.nav li a {
    font-size:24px;
    color: white;
}
/*progress bar*/

ol.steps {
    $line_height: 20px;
    $padding: 9px;
    $arrow_size: ($line_height + 2 * $padding)/2;
    $max_li: 10;

    list-style: none;
    margin: 5px 5px 15px 5px;
    padding: 0;
    overflow: hidden;
    font-family: 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', 'DejaVu Sans', 'Bitstream Vera Sans', 'Liberation Sans', Verdana, 'Verdana Ref', sans-serif;
    font-size: 13px;
    line-height: $line_height;
    font-weight: bold;
    counter-reset: li;

    li {
        list-style-image: none;
        list-style-type: none;
        margin-left: 0;
        text-align: center;
        color: $tblue;
        background: $tgrey;
        position: relative;
        margin-left: 5px + 2 * $arrow_size;
        width: 25%;

        // Appended arrow.
        &:after {
            position: absolute;
            top: 50%;
            left: 100%;
            content: " ";
            height: 0;
            width: 0;
            pointer-events: none;
            border: solid transparent;
            border-left-color: $tgrey;
            border-width: $arrow_size;
            margin-top: -$arrow_size;
        }

        // No prepended arrow on first item.
        &:first-child {
            margin-left: 10%;
            span {
                padding: $padding;
                &:after {
                    border: none;
                }
            }
        }

        // No appended arrow on last item.
        &:last-child {
            &:after {
                border-width: 0;
            }
        }

        span {
            display: block;
            padding: $padding ($padding + $arrow_size) $padding $padding;

            // Prepended arrow inset.
            &:after {
                position: absolute;
                top: 50%;
                right: 100%;
                content: " ";
                height: 0;
                width: 0;
                pointer-events: none;
                border: solid $tgrey;
                border-left-color: transparent;
                border-width: $arrow_size;
                margin-top: -$arrow_size;
            }

            // "X)" numbering
            &:before {
                content: counter(li) ") ";
                counter-increment: li;
            }
        }
    }

    & > li {
        float: left;
    }

    li.current {
        color: #fff;
        background: $tblue;

        // Appended arrow.
        &:after {
          border-left-color: $tblue;
        }

        span {
            // Prepended arrow.
            &:after {
                border-color: $tblue;
                border-left-color: transparent;
            }
        }
    }

    // For the overlapping to work, later LIs must have a lower z-index.
    @for $i from 1 through $max_li {
        li.step#{$i} {
            z-index: $max_li - $i;
        }
    }
}


